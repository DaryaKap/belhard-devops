pipeline {
    agent {
        docker {
            image 'alpine'
            args '-v /home/vagrant/log:/log -w /log -u root'
            label 'slave1'
        }
    }
    stages {
        /*stage("Initial config") {
            steps {
                script {
                    properties([pipelineTriggers([pollSCM('* * * * *')])])
                }
            }
        }*/
        stage("ADD pkgs") {
            steps {
                sh '''
                apk update && apk add --no-cach curl wget git bash speedtest-cli
                date > /log/speedtest.log && speedtest-cli >> /log/speedtest.log
                '''
            }
        }
        stage("Checkout Git") {
            steps {
                git branch: 'bh-devops-01-22', url: 'https://github.com/vbrilik/belhard-devops.git' 
            }
        }
        stage("List du") {
            steps {
                sh '''
                pwd
                du -ah
                '''
            }
        }
    }    
        post { 
            success { 
                /*telegramSend(message:'Ok', chatId: 655352309)*/
                withCredentials([string(credentialsId: 'tel_secret', variable: 'TOKEN'),string(credentialsId: 'tel_chat_id', variable: 'CHAT_ID')]) {
                   sh """
                   curl -s -X POST https://api.telegram.org/bot${TOKEN}/sendMessage -d chat_id=${CHAT_ID} -d parse_mode=markdown -d\
                   text='*Отчёт:*\r
                   *Project name :* ${currentBuild.projectName}\r
                   *Version :* ${currentBuild.displayName}\r
                   *Status :* ${currentBuild.result}'
                   """
                }
            }
            unsuccessful {
                /*telegramSend(message:'Error', chatId: 655352309)*/
                withCredentials([string(credentialsId: 'tel_secret', variable: 'TOKEN'),string(credentialsId: 'tel_chat_id', variable: 'CHAT_ID')]) {
                    sh """
                   curl -s -X POST https://api.telegram.org/bot${TOKEN}/sendMessage -d chat_id=${CHAT_ID} -d parse_mode=markdown -d\
                   text='*Отчёт:*\r
                   *Project name :* ${currentBuild.projectName}\r
                   *Version :* ${currentBuild.displayName}\r
                   *Status :* ${currentBuild.result}'
                   """
                }
            }
            always {
                cleanWs()
            }
        
        }
}
