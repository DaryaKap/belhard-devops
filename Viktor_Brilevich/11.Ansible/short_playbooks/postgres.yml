---

- name: postgresql
  hosts: all
  become: yes
  vars:
    db_user1: belhard1
    db_name1: test1
    db_password1: "1"
    db_user2: belhard2
    db_name2: test2
    db_password2: "2"

  tasks:

    - name: Install dependencies for PostgreSQL
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'bash', 'openssl', 'libssl-dev', 'libssl-doc']

    - name: Install PostgreSQL
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'postgresql', 'postgresql-contrib', 'libpq-dev', 'python3-psycopg2']

    - name: Ensure the PostgreSQL service is running
      service: name=postgresql state=started enabled=yes
      environment:
        POSTGRES_HOST_AUTH_METHOD: 'trust'


    - name: Create the database host 1 specified in vars
      become: true
      become_user: postgres
      postgresql_db: name={{ db_name1 }}
        template='template1'
        state=present
      when:
        - ansible_hostname == 'ansible-1'

    - name: Create the database host 2 specified in vars
      become: true
      become_user: postgres
      postgresql_db: name={{ db_name2 }}
        template='template1'
        state=present
      when:
        - ansible_hostname == 'ansible-2'

    - name: Ensure user has access to the new database host 1
      become: true
      become_user: postgres
      postgresql_user: db={{ db_name1 }}
        name={{ db_user1 }}
        password={{ db_password1 }}
        priv=ALL
        state=present
      when:
        - ansible_hostname == 'ansible-1'

    - name: Ensure user has access to the new database host 2
      become: true
      become_user: postgres
      postgresql_user: db={{ db_name2 }}
        name={{ db_user2 }}
        password={{ db_password2 }}
        priv=ALL
        state=present
      when:
        - ansible_hostname == 'ansible-2'

    - name: Create postgres directory
      file:
        path: /home/belhard/docker/postgres
        state: directory
        owner: belhard
        group: devops
        mode: u=rwx,g=rwx,o=rx
      become: yes

    - name: Copy sql with owner and permission
      ansible.builtin.copy:
        src: /home/vagrant/ansible/short_playbooks/dump.sql
        dest: /home/belhard/docker/postgres/dump.sql
        owner: belhard
        group: devops
        mode: u=rw,g=rw,o=r
      become: yes

    - name: Add table and rows data to my database host 1
      become: yes
      become_user: postgres
      shell: psql {{ db_name1 }} < /home/belhard/docker/postgres/dump.sql
      when:
        - ansible_hostname == 'ansible-1'

    - name: Add table and rows data to my database host 2
      become: yes
      become_user: postgres
      shell: psql {{ db_name2 }} < /home/belhard/docker/postgres/dump.sql
      when:
        - ansible_hostname == 'ansible-2'

    - name: adding user postgres to group devops
      user:
        name: postgres
        groups: devops
        append: yes

    - name: dump database host 1
      become: yes
      become_user: postgres
      command: pg_dump -U postgres -d {{ db_name1 }} -f /home/belhard/docker/postgres/dumpfull.sql
      when:
        - ansible_hostname == 'ansible-1'

    - name: dump database host 2
      become: yes
      become_user: postgres
      command: pg_dump -U postgres -d {{ db_name2 }} -f /home/belhard/docker/postgres/dumpfull.sql
      when:
        - ansible_hostname == 'ansible-2'
