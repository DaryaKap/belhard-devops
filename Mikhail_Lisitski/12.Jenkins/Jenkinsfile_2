def sendTelegram(message) {
    def encodedMessage = URLEncoder.encode(message, "UTF-8")

    withCredentials([string(credentialsId: 'telegramToken', variable: 'TOKEN'),
    string(credentialsId: 'telegramChatId', variable: 'CHAT_ID')]) {

        response = httpRequest (consoleLogResponseBody: true,
                contentType: 'APPLICATION_JSON',
                httpMode: 'GET',
                url: "https://api.telegram.org/bot$TOKEN/sendMessage?text=$encodedMessage&chat_id=$CHAT_ID&disable_web_page_preview=true",
                validResponseCodes: '200')
        return response
    }
}

pipeline{
    agent any
    stages{
        stage ("Initial config"){
            steps {
                script {
                    properties([pipelineTriggers([pollSCM('* * * * * ')])])
                }            
            }
        }
        stage ("Run docker"){
            steps {
                script {
                    sh '''
                    mkdir log
                    docker run -v ~/log:/app/data mlisitski86/alpine_linux
                    docker ps -a
                    docker system prune -af
                    '''
                }
            }
        }
        stage ("TelegramBot"){
            steps {
                sendTelegram("Success_2")
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
